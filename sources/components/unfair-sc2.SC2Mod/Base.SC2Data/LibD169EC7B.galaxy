include "TriggerLibs/NativeLib"
include "LibCA473C97_h"
include "Lib9BDC8046_h"
include "LibD944395A_h"
include "LibD84472BA_h"
include "LibC0051C89_h"
include "Lib1A704C64_h"
include "LibCB22438A_h"
include "Lib88BAA5D0_h"
include "Lib3B55E3B4_h"
include "LibD7A170DA_h"
include "LibFCC56787_h"
include "Lib56A96906_h"
include "Lib04DA748F_h"
include "LibDBC4E2D2_h"
include "Lib827A7D7F_h"
include "LibBBD0FD26_h"
include "LibF7F71763_h"
include "Lib02E93650_h"
include "Lib60DF5275_h"
include "LibE840CECB_h"
include "Lib3BAA32A3_h"
include "LibF713A77C_h"
include "Lib16A22498_h"
include "Lib7E352632_h"
include "LibBCF1F22B_h"
include "Lib00FB2F03_h"
include "Lib87458575_h"
include "LibB7A8BF05_h"
include "LibC7F2089F_h"
include "LibC5CFFE9E_h"
include "LibD95F4C80_h"
include "LibAE474D3F_h"
include "Lib6B9047BC_h"
include "Lib52829A21_h"
include "LibAAAD51C3_h"
include "Lib6D9F8D1C_h"
include "LibD31C8AFA_h"
include "Lib7BF03AFB_h"
include "Lib2C4EDCE2_h"
include "LibDCC7911A_h"
include "Lib00CAD167_h"
include "LibF005740E_h"
include "Lib15E909D0_h"
include "LibE899973B_h"
include "LibBFDB8251_h"
include "LibEE9EC246_h"
include "Lib14F77331_h"
include "LibE1749336_h"
include "Lib7FB8482D_h"
include "Lib18CEA1F0_h"
include "Lib8D4EB941_h"
include "Lib5DECF472_h"
include "LibBDC569EF_h"
include "Lib1783C555_h"
include "LibFCEF8E43_h"
include "Lib6FC47902_h"
include "Lib78D24685_h"
include "LibBA1CFC25_h"
include "Lib96FBA2DD_h"
include "LibBFCD4496_h"
include "Lib4D46C701_h"
include "LibED822536_h"
include "Lib3F2A1735_h"
include "Lib1D99399F_h"
include "Lib313A0FF8_h"
include "Lib7397C7F4_h"
include "Lib5353B0F8_h"
include "Lib64FE5A74_h"
include "Lib77A838C7_h"
include "Lib674063E3_h"

include "LibD169EC7B_h"

//--------------------------------------------------------------------------------------------------
// Library: HANDICAPS UI
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libD169EC7B_InitLibraries () {
    libNtve_InitVariables();
    libD944395A_InitVariables();
    libD84472BA_InitVariables();
    libC0051C89_InitVariables();
    lib1A704C64_InitVariables();
    libCB22438A_InitVariables();
    lib88BAA5D0_InitVariables();
    libD7A170DA_InitVariables();
    libFCC56787_InitVariables();
    lib56A96906_InitVariables();
    libDBC4E2D2_InitVariables();
    lib827A7D7F_InitVariables();
    libBBD0FD26_InitVariables();
    lib60DF5275_InitVariables();
    libE840CECB_InitVariables();
    lib3BAA32A3_InitVariables();
    libF713A77C_InitVariables();
    lib7E352632_InitVariables();
    libC7F2089F_InitVariables();
    libD95F4C80_InitVariables();
    libD31C8AFA_InitVariables();
    lib7BF03AFB_InitVariables();
    libDCC7911A_InitVariables();
    lib00CAD167_InitVariables();
    libF005740E_InitVariables();
    libE1749336_InitVariables();
    lib8D4EB941_InitVariables();
    lib5DECF472_InitVariables();
    libBDC569EF_InitVariables();
    libFCEF8E43_InitVariables();
    lib78D24685_InitVariables();
    lib96FBA2DD_InitVariables();
    lib4D46C701_InitVariables();
    lib3F2A1735_InitVariables();
    lib1D99399F_InitVariables();
    lib7397C7F4_InitVariables();
    lib5353B0F8_InitVariables();
    lib64FE5A74_InitVariables();
    lib77A838C7_InitVariables();
    lib674063E3_InitVariables();
}

// Variable Initialization
bool libD169EC7B_InitVariables_completed = false;

void libD169EC7B_InitVariables () {
    int init_i;
    int init_i1;
    int init_i2;

    if (libD169EC7B_InitVariables_completed) {
        return;
    }

    libD169EC7B_InitVariables_completed = true;

    libD169EC7B_gv_playerstoShowHandicapsUI = PlayerGroupEmpty();
    libD169EC7B_gv_playerstoShowHandicapsMessages = PlayerGroupEmpty();
    for (init_i = 0; init_i <= 200; init_i += 1) {
        for (init_i1 = 0; init_i1 <= 50; init_i1 += 1) {
            for (init_i2 = 0; init_i2 <= 50; init_i2 += 1) {
                libD169EC7B_gv_hANDICAPS[init_i].lv_gameOptions[init_i1].lv_values[init_i2].lv_val = "";
            }
            for (init_i2 = 0; init_i2 <= 25; init_i2 += 1) {
                libD169EC7B_gv_hANDICAPS[init_i].lv_gameOptions[init_i1].lv_vals[init_i2].lv_val = "";
            }
            libD169EC7B_gv_hANDICAPS[init_i].lv_gameOptions[init_i1].lv_selectedVal = "";
            libD169EC7B_gv_hANDICAPS[init_i].lv_gameOptions[init_i1].lv_listBox = c_invalidDialogControlId;
        }
        for (init_i1 = 0; init_i1 <= 50; init_i1 += 1) {
            for (init_i2 = 0; init_i2 <= 25; init_i2 += 1) {
                libD169EC7B_gv_hANDICAPS[init_i].lv_playerOptions[init_i1].lv_values[init_i2].lv_val = "";
            }
            for (init_i2 = 0; init_i2 <= 17; init_i2 += 1) {
                libD169EC7B_gv_hANDICAPS[init_i].lv_playerOptions[init_i1].lv_selectedVals[init_i2] = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
            }
            for (init_i2 = 0; init_i2 <= 17; init_i2 += 1) {
                libD169EC7B_gv_hANDICAPS[init_i].lv_playerOptions[init_i1].lv_listBoxes[init_i2] = c_invalidDialogControlId;
            }
            libD169EC7B_gv_hANDICAPS[init_i].lv_playerOptions[init_i1].lv_defaultValue = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
        }
        libD169EC7B_gv_hANDICAPS[init_i].lv_detailsButton = c_invalidDialogControlId;
        libD169EC7B_gv_hANDICAPS[init_i].lv_toggleButton = c_invalidDialogControlId;
        libD169EC7B_gv_hANDICAPS[init_i].lv_backButton = c_invalidDialogControlId;
    }
    libD169EC7B_gv_handicapsDialog = c_invalidDialogId;
    libD169EC7B_gv_customHandicapDialog = c_invalidDialogId;
    libD169EC7B_gv_startGameButton = c_invalidDialogControlId;
}

// Functions
void libD169EC7B_gf_SetupOptions (int lp_handicapindex) {
    // Variable Declarations
    int lv_optionindex;
    int lv_optionvalueindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_82F5FE39");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description = StringExternal("Param/Value/lib_D169EC7B_F1B7BA90");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath = null;
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_2F3ADBA8");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%VAL%";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_selectedVal = "%VAL%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%VAL2%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_2DF2C766");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%VAL%";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_selectedVal = "%VAL%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%VAL2%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_032743C1");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%VAL%";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_selectedVal = "%VAL%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%VAL2%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofGameOptions = lv_optionindex;
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_92408832");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%ENABLE VAL%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_7AB6E89D");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%ENABLE VAL%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_D169EC7B_35443123");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "%ENABLE VAL%";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions = lv_optionindex;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_setupTrigger = libD169EC7B_gt_SetupHandicap;
}

void libD169EC7B_gf_EnableHandicap (int lp_handicapIndex) {
    // Variable Declarations
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup autoB09E3F2B_g;
    int autoB09E3F2B_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_enabled == true)) {
        autoB09E3F2B_g = PlayerGroupActive();
        autoB09E3F2B_var = -1;
        while (true) {
            autoB09E3F2B_var = PlayerGroupNextPlayer(autoB09E3F2B_g, autoB09E3F2B_var);
            if (autoB09E3F2B_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[autoB09E3F2B_var] != libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL)) {
                PlayerGroupAdd(lv_players, autoB09E3F2B_var);
                libD169EC7B_gf_EnableHandicapForPlayer(autoB09E3F2B_var);
            }

        }
        if ((PlayerGroupCount(lv_players) > 0)) {
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_24ED794E", "Description", libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_description);
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_24ED794E", "Players", libDBC4E2D2_gf_GetPlayerNamesColored(lv_players));
            HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_D169EC7B_24ED794E"), libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_iconPath);
        }

    }

}

void libD169EC7B_gf_EnableHandicapForPlayer (int lp_player) {
    // Automatic Variable Declarations
}

int libD169EC7B_gf_CreateHandicapsDialog () {
    // Variable Declarations
    int lv_handicapsDialogLocal;
    int lv_handicapindex;
    int lv_i;
    int lv_j;
    int lv_handicapButtonWidth;
    int lv_handicapButtonHeight;
    int lv_buttonsInTheRow;
    int lv_buttonXOffset;
    int lv_buttonYOffset;
    text lv_enabledHandicaps;

    // Automatic Variable Declarations
    int auto8FFDF2CF_ae;
    const int auto8FFDF2CF_ai = 1;

    // Variable Initialization
    lv_handicapsDialogLocal = c_invalidDialogId;
    lv_handicapButtonWidth = 330;
    lv_handicapButtonHeight = 45;
    lv_buttonsInTheRow = 4;

    // Implementation
    DialogCreate(700, 500, c_anchorCenter, 0, 0, true);
    lv_handicapsDialogLocal = DialogLastCreated();
    DialogSetFullscreen(lv_handicapsDialogLocal, true);
    libNtve_gf_CreateDialogItemButton(lv_handicapsDialogLocal, 200, 50, c_anchorBottomRight, 50, 50, StringToText(""), StringExternal("Param/Value/lib_D169EC7B_81B8534A"), "");
    libD169EC7B_gv_startGameButton = DialogControlLastCreated();
    auto8FFDF2CF_ae = (libD169EC7B_gv_numberofHandicaps - 1);
    lv_handicapindex = 0;
    for ( ; ( (auto8FFDF2CF_ai >= 0 && lv_handicapindex <= auto8FFDF2CF_ae) || (auto8FFDF2CF_ai < 0 && lv_handicapindex >= auto8FFDF2CF_ae) ) ; lv_handicapindex += auto8FFDF2CF_ai ) {
        lv_buttonXOffset = ((lv_i * lv_handicapButtonWidth) + 25);
        lv_buttonYOffset = ((lv_j * lv_handicapButtonHeight) + 25);
        DialogControlCreateFromTemplate(lv_handicapsDialogLocal, c_triggerControlTypeButton, "HelpPanel/HelpWelcomePanelButtonTemplate");
        libNtve_gf_SetDialogItemText(DialogControlLastCreated(), libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_name, PlayerGroupAll());
        libNtve_gf_SetDialogItemTooltip(DialogControlLastCreated(), libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_description, PlayerGroupAll());
        DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, lv_buttonXOffset, lv_buttonYOffset);
        if ((libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_enabled == true)) {
            libNtve_gf_SetDialogItemColor(DialogControlLastCreated(), Color(22*100/255,128*100/255,0), PlayerGroupAll());
        }

        libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_detailsButton = DialogControlLastCreated();
        libNtve_gf_SetDialogItemStyle(libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_detailsButton, "StandardMediumButton", PlayerGroupAll());
        if ((lv_i == (lv_buttonsInTheRow - 1))) {
            lv_i = 0;
            lv_j += 1;
        }
        else {
            lv_i += 1;
        }
        if ((libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_enabled == true)) {
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_F57BAD7A", "A", lv_enabledHandicaps);
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_F57BAD7A", "New", libD169EC7B_gv_hANDICAPS[lv_handicapindex].lv_name);
            lv_enabledHandicaps = TextExpressionAssemble("Param/Expression/lib_D169EC7B_F57BAD7A");
        }

    }
    TextExpressionSetToken("Param/Expression/lib_D169EC7B_6402896D", "A", lv_enabledHandicaps);
    libNtve_gf_CreateDialogItemLabel(lv_handicapsDialogLocal, 1000, 50, c_anchorBottomLeft, 50, 50, TextExpressionAssemble("Param/Expression/lib_D169EC7B_6402896D"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "Campaign_FloatingTitle", PlayerGroupAll());
    return lv_handicapsDialogLocal;
}

int libD169EC7B_gf_CreateCustomHandicapDialog (int lp_handicapindex) {
    // Variable Declarations
    int lv_i;
    int lv_j;
    int lv_k;
    int lv_customHandicapUILocal;
    int lv_gameOptionRowHeight;
    int lv_playerOptionRowHeight;
    int lv_listBoxWidth;
    int lv_gameOptionsYOffset;
    int lv_xOffset;
    int lv_playerOptionsYOffset;
    text lv_toggleButtonText;

    // Automatic Variable Declarations
    int autoA046B07A_ae;
    const int autoA046B07A_ai = 1;
    int auto17AE29DF_ae;
    const int auto17AE29DF_ai = 1;
    playergroup auto849A9E9D_g;
    int auto849A9E9D_var;
    int autoBBA631BE_ae;
    const int autoBBA631BE_ai = 1;
    playergroup auto5D0C4713_g;
    int auto5D0C4713_var;
    int autoAAF0627B_ae;
    const int autoAAF0627B_ai = 1;

    // Variable Initialization
    lv_customHandicapUILocal = c_invalidDialogId;
    lv_gameOptionRowHeight = 80;
    lv_playerOptionRowHeight = 80;
    lv_listBoxWidth = 220;
    lv_xOffset = 50;

    // Implementation
    DialogCreate(500, 400, c_anchorCenter, 0, 0, false);
    lv_customHandicapUILocal = DialogLastCreated();
    DialogSetFullscreen(lv_customHandicapUILocal, true);
    libNtve_gf_CreateDialogItemButton(lv_customHandicapUILocal, 200, 50, c_anchorBottomLeft, 50, 50, StringToText(""), StringExternal("Param/Value/lib_D169EC7B_B8CE3FE2"), "");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_backButton = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(lv_customHandicapUILocal, 1000, 50, c_anchorTopLeft, 140, 65, libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name, ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "Campaign_FloatingTitle", PlayerGroupAll());
    libNtve_gf_CreateDialogItemImage(lv_customHandicapUILocal, 80, 80, c_anchorTopLeft, 50, 50, StringToText(""), libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath, c_triggerImageTypeNormal, true, Color(100,100,100), c_triggerBlendModeNormal);
    libNtve_gf_CreateDialogItemLabel(lv_customHandicapUILocal, 1000, 80, c_anchorTopLeft, 50, 150, libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description, ColorWithAlpha(0,0,0,0), false, 2.0);
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_enabled == true)) {
        lv_toggleButtonText = StringExternal("Param/Value/lib_D169EC7B_2B9686F4");
    }
    else {
        lv_toggleButtonText = StringExternal("Param/Value/lib_D169EC7B_D2BE9C5F");
    }
    libNtve_gf_CreateDialogItemButton(lv_customHandicapUILocal, 200, 50, c_anchorTop, 0, 50, StringToText(""), lv_toggleButtonText, "");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_toggleButton = DialogControlLastCreated();
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_enabled == true)) {
        lv_gameOptionsYOffset = 200;
        autoA046B07A_ae = (libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofGameOptions - 1);
        lv_i = 0;
        for ( ; ( (autoA046B07A_ai >= 0 && lv_i <= autoA046B07A_ae) || (autoA046B07A_ai < 0 && lv_i >= autoA046B07A_ae) ) ; lv_i += autoA046B07A_ai ) {
            libNtve_gf_CreateDialogItemLabel(lv_customHandicapUILocal, 500, 50, c_anchorTopLeft, lv_xOffset, lv_gameOptionsYOffset, libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_name, ColorWithAlpha(0,0,0,0), false, 2.0);
            DialogControlCreate(lv_customHandicapUILocal, c_triggerControlTypeListBox);
            libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_listBox = DialogControlLastCreated();
            DialogControlSetPosition(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_listBox, PlayerGroupAll(), c_anchorTopLeft, lv_xOffset, (lv_gameOptionsYOffset + 30));
            DialogControlSetSize(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_listBox, PlayerGroupAll(), lv_listBoxWidth, lv_gameOptionRowHeight);
            auto17AE29DF_ae = (libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_numberofValues - 1);
            lv_j = 0;
            for ( ; ( (auto17AE29DF_ai >= 0 && lv_j <= auto17AE29DF_ae) || (auto17AE29DF_ai < 0 && lv_j >= auto17AE29DF_ae) ) ; lv_j += auto17AE29DF_ai ) {
                DialogControlAddItem(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_listBox, PlayerGroupAll(), StringToText(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_values[lv_j].lv_val));
                if ((libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_selectedVal == libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_values[lv_j].lv_val)) {
                    DialogControlSelectItem(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_i].lv_listBox, PlayerGroupAll(), (lv_j + 1));
                }

            }
            if ((lv_xOffset == 50)) {
                lv_xOffset = 330;
            }
            else {
                if ((lv_xOffset == 330)) {
                    lv_xOffset = 660;
                }
                else {
                    lv_xOffset = 50;
                    lv_gameOptionsYOffset += lv_gameOptionRowHeight;
                    lv_gameOptionsYOffset += 40;
                }
            }
        }
        if ((lv_xOffset != 50)) {
            lv_gameOptionsYOffset += lv_gameOptionRowHeight;
            lv_gameOptionsYOffset += 40;
        }

        lv_playerOptionsYOffset = (lv_gameOptionsYOffset + 20);
        if ((libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions > 0)) {
            lv_k = 0;
            auto849A9E9D_g = PlayerGroupActive();
            auto849A9E9D_var = -1;
            while (true) {
                auto849A9E9D_var = PlayerGroupNextPlayer(auto849A9E9D_g, auto849A9E9D_var);
                if (auto849A9E9D_var < 0) { break; }
                libNtve_gf_CreateDialogItemLabel(lv_customHandicapUILocal, 200, 50, c_anchorTopLeft, ((lv_listBoxWidth * lv_k) + 50), lv_playerOptionsYOffset, libDBC4E2D2_gf_GetPlayerNamesColored(PlayerGroupSingle(auto849A9E9D_var)), ColorWithAlpha(0,0,0,0), false, 2.0);
                lv_k += 1;
            }
            lv_playerOptionsYOffset += 30;
            autoBBA631BE_ae = (libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions - 1);
            lv_i = 0;
            for ( ; ( (autoBBA631BE_ai >= 0 && lv_i <= autoBBA631BE_ae) || (autoBBA631BE_ai < 0 && lv_i >= autoBBA631BE_ae) ) ; lv_i += autoBBA631BE_ai ) {
                libNtve_gf_CreateDialogItemLabel(lv_customHandicapUILocal, 1000, 50, c_anchorTopLeft, 50, lv_playerOptionsYOffset, libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_name, ColorWithAlpha(0,0,0,0), false, 2.0);
                lv_playerOptionsYOffset += 30;
                lv_k = 0;
                auto5D0C4713_g = PlayerGroupActive();
                auto5D0C4713_var = -1;
                while (true) {
                    auto5D0C4713_var = PlayerGroupNextPlayer(auto5D0C4713_g, auto5D0C4713_var);
                    if (auto5D0C4713_var < 0) { break; }
                    DialogControlCreate(lv_customHandicapUILocal, c_triggerControlTypeListBox);
                    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_listBoxes[auto5D0C4713_var] = DialogControlLastCreated();
                    DialogControlSetPosition(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_listBoxes[auto5D0C4713_var], PlayerGroupAll(), c_anchorTopLeft, ((lv_listBoxWidth * lv_k) + 50), lv_playerOptionsYOffset);
                    DialogControlSetSize(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_listBoxes[auto5D0C4713_var], PlayerGroupAll(), lv_listBoxWidth, lv_playerOptionRowHeight);
                    autoAAF0627B_ae = (libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_numberofValues - 1);
                    lv_j = 0;
                    for ( ; ( (autoAAF0627B_ai >= 0 && lv_j <= autoAAF0627B_ae) || (autoAAF0627B_ai < 0 && lv_j >= autoAAF0627B_ae) ) ; lv_j += autoAAF0627B_ai ) {
                        DialogControlAddItem(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_listBoxes[auto5D0C4713_var], PlayerGroupAll(), StringToText(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_values[lv_j].lv_val));
                        if ((libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_selectedVals[auto5D0C4713_var] == libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_values[lv_j].lv_val)) {
                            DialogControlSelectItem(libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_i].lv_listBoxes[auto5D0C4713_var], PlayerGroupAll(), (lv_j + 1));
                        }

                    }
                    lv_k += 1;
                }
                lv_playerOptionsYOffset += lv_playerOptionRowHeight;
                lv_playerOptionsYOffset += 20;
            }
        }

    }

    return lv_customHandicapUILocal;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicap
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_SetupHandicap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libD169EC7B_gf_EnableHandicap(libD169EC7B_gv_activeHandicapIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_SetupHandicap_Init () {
    libD169EC7B_gt_SetupHandicap = TriggerCreate("libD169EC7B_gt_SetupHandicap_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicaps
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_SetupHandicaps_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_handicapindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lv_handicapindex = 0;
    libCA473C97_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libD944395A_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libD84472BA_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib9BDC8046_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libC0051C89_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib1A704C64_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libCB22438A_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib88BAA5D0_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib3B55E3B4_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libD7A170DA_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libFCC56787_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib56A96906_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib04DA748F_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib827A7D7F_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libBBD0FD26_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libF7F71763_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib02E93650_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib60DF5275_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libE840CECB_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib3BAA32A3_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libF713A77C_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib16A22498_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib7E352632_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libBCF1F22B_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib00FB2F03_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib87458575_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libB7A8BF05_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libC7F2089F_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libC5CFFE9E_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libD95F4C80_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libAE474D3F_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib6B9047BC_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib52829A21_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libAAAD51C3_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib6D9F8D1C_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libD31C8AFA_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib7BF03AFB_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib2C4EDCE2_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libDCC7911A_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib00CAD167_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libF005740E_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib15E909D0_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libE899973B_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libBFDB8251_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libEE9EC246_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib14F77331_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libE1749336_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib7FB8482D_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib18CEA1F0_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib8D4EB941_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib5DECF472_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libBDC569EF_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib1783C555_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libFCEF8E43_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib6FC47902_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib78D24685_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libBA1CFC25_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib96FBA2DD_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libBFCD4496_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib4D46C701_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libED822536_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib3F2A1735_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib1D99399F_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib313A0FF8_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib7397C7F4_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib5353B0F8_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib64FE5A74_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib77A838C7_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    lib674063E3_gf_SetupOptions(lv_handicapindex);
    lv_handicapindex += 1;
    libD169EC7B_gv_numberofHandicaps = lv_handicapindex;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_SetupHandicaps_Init () {
    libD169EC7B_gt_SetupHandicaps = TriggerCreate("libD169EC7B_gt_SetupHandicaps_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Handicaps UI Start
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_HandicapsUIStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto47C74C33_g;
    int auto47C74C33_var;
    playergroup auto0988F241_g;
    int auto0988F241_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto47C74C33_g = PlayerGroupActive();
    auto47C74C33_var = -1;
    while (true) {
        auto47C74C33_var = PlayerGroupNextPlayer(auto47C74C33_g, auto47C74C33_var);
        if (auto47C74C33_var < 0) { break; }
        if ((GameAttributePlayerValue("1", auto47C74C33_var) == "0001")) {
            PlayerGroupAdd(libD169EC7B_gv_playerstoShowHandicapsUI, auto47C74C33_var);
            break;
        }

    }
    if ((PlayerGroupCount(libD169EC7B_gv_playerstoShowHandicapsUI) == 0)) {
        PlayerGroupAdd(libD169EC7B_gv_playerstoShowHandicapsUI, 1);
    }

    libNtve_gf_AddPlayerGroupToPlayerGroup(PlayerGroupAll(), libD169EC7B_gv_playerstoShowHandicapsMessages);
    libNtve_gf_RemovePlayerGroupFromPlayerGroup(libD169EC7B_gv_playerstoShowHandicapsUI, libD169EC7B_gv_playerstoShowHandicapsMessages);
    Wait(0.125, c_timeGame);
    TextExpressionSetToken("Param/Expression/lib_D169EC7B_9DC58FD1", "Players", libDBC4E2D2_gf_GetPlayerNamesColored(libD169EC7B_gv_playerstoShowHandicapsUI));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_D169EC7B_9DC58FD1"));
    GameSetMissionTimePaused(true);
    AITimePause(true);
    UnitPauseAll(true);
    libNtve_gf_HideGameUI(false, PlayerGroupAll());
    TriggerExecute(libD169EC7B_gt_SetupHandicaps, true, true);
    libD169EC7B_gv_handicapsDialog = libD169EC7B_gf_CreateHandicapsDialog();
    DialogSetVisible(libD169EC7B_gv_handicapsDialog, libD169EC7B_gv_playerstoShowHandicapsUI, true);
    auto0988F241_g = PlayerGroupAll();
    auto0988F241_var = -1;
    while (true) {
        auto0988F241_var = PlayerGroupNextPlayer(auto0988F241_g, auto0988F241_var);
        if (auto0988F241_var < 0) { break; }
        MeleeSetOption(auto0988F241_var, c_meleeOptionDefeat, false);
        MeleeSetOption(auto0988F241_var, c_meleeOptionVictory, false);
        MeleeSetOption(auto0988F241_var, c_meleeOptionStalemate, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_HandicapsUIStart_Init () {
    libD169EC7B_gt_HandicapsUIStart = TriggerCreate("libD169EC7B_gt_HandicapsUIStart_Func");
    TriggerAddEventMapInit(libD169EC7B_gt_HandicapsUIStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Handicap Details Button Click
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_HandicapDetailsButtonClick_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_customHandicapDialog;

    // Automatic Variable Declarations
    int autoDF82A74B_ae;
    const int autoDF82A74B_ai = 1;

    // Variable Initialization
    lv_customHandicapDialog = c_invalidDialogId;

    // Actions
    if (!runActions) {
        return true;
    }

    autoDF82A74B_ae = (libD169EC7B_gv_numberofHandicaps - 1);
    lv_i = 0;
    for ( ; ( (autoDF82A74B_ai >= 0 && lv_i <= autoDF82A74B_ae) || (autoDF82A74B_ai < 0 && lv_i >= autoDF82A74B_ae) ) ; lv_i += autoDF82A74B_ai ) {
        if ((EventDialogControl() == libD169EC7B_gv_hANDICAPS[lv_i].lv_detailsButton)) {
            DialogDestroyAll();
            libD169EC7B_gv_activeHandicapIndex = lv_i;
            lv_customHandicapDialog = libD169EC7B_gf_CreateCustomHandicapDialog(lv_i);
            DialogSetVisible(lv_customHandicapDialog, libD169EC7B_gv_playerstoShowHandicapsUI, true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_HandicapDetailsButtonClick_Init () {
    libD169EC7B_gt_HandicapDetailsButtonClick = TriggerCreate("libD169EC7B_gt_HandicapDetailsButtonClick_Func");
    TriggerAddEventDialogControl(libD169EC7B_gt_HandicapDetailsButtonClick, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Toggle Handicap Button Click
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_ToggleHandicapButtonClick_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_j;

    // Automatic Variable Declarations
    int autoF6EF5FB7_ae;
    const int autoF6EF5FB7_ai = 1;
    const int auto800A2080_ae = 16;
    const int auto800A2080_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_toggleButton)) {
        if ((libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_enabled == true)) {
            libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_enabled = false;
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_D20A5DA8", "Handicap", libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_name);
            UIDisplayMessage(libD169EC7B_gv_playerstoShowHandicapsMessages, c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_D169EC7B_D20A5DA8"));
            autoF6EF5FB7_ae = (libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_numberofPlayerOptions - 1);
            lv_i = 0;
            for ( ; ( (autoF6EF5FB7_ai >= 0 && lv_i <= autoF6EF5FB7_ae) || (autoF6EF5FB7_ai < 0 && lv_i >= autoF6EF5FB7_ae) ) ; lv_i += autoF6EF5FB7_ai ) {
                lv_j = 0;
                for ( ; ( (auto800A2080_ai >= 0 && lv_j <= auto800A2080_ae) || (auto800A2080_ai < 0 && lv_j >= auto800A2080_ae) ) ; lv_j += auto800A2080_ai ) {
                    libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_selectedVals[lv_j] = libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_defaultValue;
                }
            }
        }
        else {
            libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_enabled = true;
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_3DA8BA61", "Handicap", libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_name);
            UIDisplayMessage(libD169EC7B_gv_playerstoShowHandicapsMessages, c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_D169EC7B_3DA8BA61"));
        }
        DialogDestroyAll();
        libD169EC7B_gv_customHandicapDialog = libD169EC7B_gf_CreateCustomHandicapDialog(libD169EC7B_gv_activeHandicapIndex);
        DialogSetVisible(libD169EC7B_gv_customHandicapDialog, libD169EC7B_gv_playerstoShowHandicapsUI, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_ToggleHandicapButtonClick_Init () {
    libD169EC7B_gt_ToggleHandicapButtonClick = TriggerCreate("libD169EC7B_gt_ToggleHandicapButtonClick_Func");
    TriggerAddEventDialogControl(libD169EC7B_gt_ToggleHandicapButtonClick, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Handicap Back Button Click
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_HandicapBackButtonClick_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_backButton)) {
        UIClearMessages(libD169EC7B_gv_playerstoShowHandicapsUI, c_messageAreaAll);
        DialogDestroyAll();
        libD169EC7B_gv_handicapsDialog = libD169EC7B_gf_CreateHandicapsDialog();
        DialogSetVisible(libD169EC7B_gv_handicapsDialog, libD169EC7B_gv_playerstoShowHandicapsUI, true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_HandicapBackButtonClick_Init () {
    libD169EC7B_gt_HandicapBackButtonClick = TriggerCreate("libD169EC7B_gt_HandicapBackButtonClick_Func");
    TriggerAddEventDialogControl(libD169EC7B_gt_HandicapBackButtonClick, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Game Button Click
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_StartGameButtonClick_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_countdownSeconds;

    // Automatic Variable Declarations
    const int autoDBCA2FFB_ae = 1;
    const int autoDBCA2FFB_ai = -1;
    playergroup auto0DD3B36A_g;
    int auto0DD3B36A_var;
    int auto94215A69_ae;
    const int auto94215A69_ai = 1;
    playergroup autoFDC8BE69_g;
    int autoFDC8BE69_var;
    int auto14B73463_ae;
    int auto14B73463_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == libD169EC7B_gv_startGameButton)) {
        DialogDestroyAll();
        SoundPlayForPlayer(SoundLink("AlarakA_Countdown", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        lv_countdownSeconds = 5;
        for ( ; ( (autoDBCA2FFB_ai >= 0 && lv_countdownSeconds <= autoDBCA2FFB_ae) || (autoDBCA2FFB_ai < 0 && lv_countdownSeconds >= autoDBCA2FFB_ae) ) ; lv_countdownSeconds += autoDBCA2FFB_ai ) {
            TextExpressionSetToken("Param/Expression/lib_D169EC7B_9706314B", "Seconds", IntToText(lv_countdownSeconds));
            UIDisplayMessage(PlayerGroupAll(), c_messageAreaDirective, TextExpressionAssemble("Param/Expression/lib_D169EC7B_9706314B"));
            Wait(1.0, c_timeReal);
            UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
        }
        GameSetMissionTimePaused(false);
        AITimePause(false);
        UnitPauseAll(false);
        libNtve_gf_HideGameUI(true, PlayerGroupAll());
        auto0DD3B36A_g = PlayerGroupAll();
        auto0DD3B36A_var = -1;
        while (true) {
            auto0DD3B36A_var = PlayerGroupNextPlayer(auto0DD3B36A_g, auto0DD3B36A_var);
            if (auto0DD3B36A_var < 0) { break; }
            MeleeSetOption(auto0DD3B36A_var, c_meleeOptionDefeat, true);
            MeleeSetOption(auto0DD3B36A_var, c_meleeOptionVictory, true);
            MeleeSetOption(auto0DD3B36A_var, c_meleeOptionStalemate, true);
        }
        auto94215A69_ae = (libD169EC7B_gv_numberofHandicaps - 1);
        lv_i = 0;
        for ( ; ( (auto94215A69_ai >= 0 && lv_i <= auto94215A69_ae) || (auto94215A69_ai < 0 && lv_i >= auto94215A69_ae) ) ; lv_i += auto94215A69_ai ) {
            libD169EC7B_gv_activeHandicapIndex = lv_i;
            TriggerExecute(libD169EC7B_gv_hANDICAPS[lv_i].lv_setupTrigger, true, true);
        }
        autoFDC8BE69_g = PlayerGroupActive();
        autoFDC8BE69_var = -1;
        while (true) {
            autoFDC8BE69_var = PlayerGroupNextPlayer(autoFDC8BE69_g, autoFDC8BE69_var);
            if (autoFDC8BE69_var < 0) { break; }
            DialogCreate(400, (libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_numberofmessages * 25), c_anchorTopLeft, 0, 0, true);
            libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_messagesmodaldialog = DialogLastCreated();
            DialogSetImageVisible(libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_messagesmodaldialog, false);
            DialogSetVisible(libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_messagesmodaldialog, PlayerGroupSingle(autoFDC8BE69_var), true);
            auto14B73463_ae = libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_numberofmessages;
            auto14B73463_var = 1;
            for ( ; auto14B73463_var <= auto14B73463_ae; auto14B73463_var += 1 ) {
                libNtve_gf_CreateDialogItemLabel(libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_messagesmodaldialog, 400, 40, c_anchorTopLeft, 0, (25 * (auto14B73463_var - 1)), StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
                libDBC4E2D2_gv_pLAYERS[autoFDC8BE69_var].lv_uI.lv_dialogMessages[auto14B73463_var] = DialogControlLastCreated();
            }
        }
        TimerStart(libDBC4E2D2_gv_timer1s, 1.0, true, c_timeReal);
        BoardShowAll(true, libDBC4E2D2_gv_observerGroup);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_StartGameButtonClick_Init () {
    libD169EC7B_gt_StartGameButtonClick = TriggerCreate("libD169EC7B_gt_StartGameButtonClick_Func");
    TriggerAddEventDialogControl(libD169EC7B_gt_StartGameButtonClick, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Option Value Changed
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_PlayerOptionValueChanged_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_j;
    string lv_value;

    // Automatic Variable Declarations
    int autoAA250330_ae;
    const int autoAA250330_ai = 1;
    playergroup autoABB4F041_g;
    int autoABB4F041_var;

    // Variable Initialization
    lv_value = "";

    // Actions
    if (!runActions) {
        return true;
    }

    autoAA250330_ae = libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_numberofPlayerOptions;
    lv_i = 0;
    for ( ; ( (autoAA250330_ai >= 0 && lv_i <= autoAA250330_ae) || (autoAA250330_ai < 0 && lv_i >= autoAA250330_ae) ) ; lv_i += autoAA250330_ai ) {
        autoABB4F041_g = PlayerGroupActive();
        autoABB4F041_var = -1;
        while (true) {
            autoABB4F041_var = PlayerGroupNextPlayer(autoABB4F041_g, autoABB4F041_var);
            if (autoABB4F041_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_listBoxes[autoABB4F041_var] == EventDialogControl())) {
                lv_value = libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_values[(DialogControlGetSelectedItem(EventDialogControl(), EventPlayer()) - 1)].lv_val;
                if ((libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_selectedVals[autoABB4F041_var] != lv_value)) {
                    libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_selectedVals[autoABB4F041_var] = lv_value;
                    TextExpressionSetToken("Param/Expression/lib_D169EC7B_DD50153D", "Handicap", libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_name);
                    TextExpressionSetToken("Param/Expression/lib_D169EC7B_DD50153D", "Option", libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_playerOptions[lv_i].lv_name);
                    TextExpressionSetToken("Param/Expression/lib_D169EC7B_DD50153D", "Player", libDBC4E2D2_gf_GetPlayerNamesColored(PlayerGroupSingle(autoABB4F041_var)));
                    TextExpressionSetToken("Param/Expression/lib_D169EC7B_DD50153D", "Value", StringToText(lv_value));
                    UIDisplayMessage(libD169EC7B_gv_playerstoShowHandicapsMessages, c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_D169EC7B_DD50153D"));
                }

            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_PlayerOptionValueChanged_Init () {
    libD169EC7B_gt_PlayerOptionValueChanged = TriggerCreate("libD169EC7B_gt_PlayerOptionValueChanged_Func");
    TriggerAddEventDialogControl(libD169EC7B_gt_PlayerOptionValueChanged, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Game Option Value Changed
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_gt_GameOptionValueChanged_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_i;
    int lv_j;
    string lv_value;

    // Automatic Variable Declarations
    int autoC6652104_ae;
    const int autoC6652104_ai = 1;

    // Variable Initialization
    lv_value = "";

    // Actions
    if (!runActions) {
        return true;
    }

    autoC6652104_ae = libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_numberofGameOptions;
    lv_i = 0;
    for ( ; ( (autoC6652104_ai >= 0 && lv_i <= autoC6652104_ae) || (autoC6652104_ai < 0 && lv_i >= autoC6652104_ae) ) ; lv_i += autoC6652104_ai ) {
        if ((libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_gameOptions[lv_i].lv_listBox == EventDialogControl())) {
            lv_value = libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_gameOptions[lv_i].lv_values[(DialogControlGetSelectedItem(EventDialogControl(), EventPlayer()) - 1)].lv_val;
            if ((libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_gameOptions[lv_i].lv_selectedVal != lv_value)) {
                libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_gameOptions[lv_i].lv_selectedVal = lv_value;
                TextExpressionSetToken("Param/Expression/lib_D169EC7B_0FFEA8BE", "Handicap", libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_name);
                TextExpressionSetToken("Param/Expression/lib_D169EC7B_0FFEA8BE", "Option", libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_gameOptions[lv_i].lv_name);
                TextExpressionSetToken("Param/Expression/lib_D169EC7B_0FFEA8BE", "Value", StringToText(lv_value));
                UIDisplayMessage(libD169EC7B_gv_playerstoShowHandicapsMessages, c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_D169EC7B_0FFEA8BE"));
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libD169EC7B_gt_GameOptionValueChanged_Init () {
    libD169EC7B_gt_GameOptionValueChanged = TriggerCreate("libD169EC7B_gt_GameOptionValueChanged_Func");
    TriggerAddEventDialogControl(libD169EC7B_gt_GameOptionValueChanged, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeSelectionChanged);
}

void libD169EC7B_InitTriggers () {
    libD169EC7B_gt_SetupHandicap_Init();
    libD169EC7B_gt_SetupHandicaps_Init();
    libD169EC7B_gt_HandicapsUIStart_Init();
    libD169EC7B_gt_HandicapDetailsButtonClick_Init();
    libD169EC7B_gt_ToggleHandicapButtonClick_Init();
    libD169EC7B_gt_HandicapBackButtonClick_Init();
    libD169EC7B_gt_StartGameButtonClick_Init();
    libD169EC7B_gt_PlayerOptionValueChanged_Init();
    libD169EC7B_gt_GameOptionValueChanged_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libD169EC7B_InitLib_completed = false;

void libD169EC7B_InitLib () {
    if (libD169EC7B_InitLib_completed) {
        return;
    }

    libD169EC7B_InitLib_completed = true;

    libD169EC7B_InitLibraries();
    libD169EC7B_InitVariables();
    libD169EC7B_InitTriggers();
}

include "LibCA473C97"
include "Lib9BDC8046"
include "LibD944395A"
include "LibD84472BA"
include "LibC0051C89"
include "Lib1A704C64"
include "LibCB22438A"
include "Lib88BAA5D0"
include "Lib3B55E3B4"
include "LibD7A170DA"
include "LibFCC56787"
include "Lib56A96906"
include "Lib04DA748F"
include "LibDBC4E2D2"
include "Lib827A7D7F"
include "LibBBD0FD26"
include "LibF7F71763"
include "Lib02E93650"
include "Lib60DF5275"
include "LibE840CECB"
include "Lib3BAA32A3"
include "LibF713A77C"
include "Lib16A22498"
include "Lib7E352632"
include "LibBCF1F22B"
include "Lib00FB2F03"
include "Lib87458575"
include "LibB7A8BF05"
include "LibC7F2089F"
include "LibC5CFFE9E"
include "LibD95F4C80"
include "LibAE474D3F"
include "Lib6B9047BC"
include "Lib52829A21"
include "LibAAAD51C3"
include "Lib6D9F8D1C"
include "LibD31C8AFA"
include "Lib7BF03AFB"
include "Lib2C4EDCE2"
include "LibDCC7911A"
include "Lib00CAD167"
include "LibF005740E"
include "Lib15E909D0"
include "LibE899973B"
include "LibBFDB8251"
include "LibEE9EC246"
include "Lib14F77331"
include "LibE1749336"
include "Lib7FB8482D"
include "Lib18CEA1F0"
include "Lib8D4EB941"
include "Lib5DECF472"
include "LibBDC569EF"
include "Lib1783C555"
include "LibFCEF8E43"
include "Lib6FC47902"
include "Lib78D24685"
include "LibBA1CFC25"
include "Lib96FBA2DD"
include "LibBFCD4496"
include "Lib4D46C701"
include "LibED822536"
include "Lib3F2A1735"
include "Lib1D99399F"
include "Lib313A0FF8"
include "Lib7397C7F4"
include "Lib5353B0F8"
include "Lib64FE5A74"
include "Lib77A838C7"
include "Lib674063E3"

