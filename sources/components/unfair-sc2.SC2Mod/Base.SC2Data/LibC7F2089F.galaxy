include "TriggerLibs/NativeLib"
include "LibD169EC7B_h"
include "LibDBC4E2D2_h"

include "LibC7F2089F_h"

//--------------------------------------------------------------------------------------------------
// Library: FIGHT CLUB
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libC7F2089F_InitLibraries () {
    libNtve_InitVariables();
    libD169EC7B_InitVariables();
    libDBC4E2D2_InitVariables();
}

// Variable Initialization
bool libC7F2089F_InitVariables_completed = false;

void libC7F2089F_InitVariables () {
    if (libC7F2089F_InitVariables_completed) {
        return;
    }

    libC7F2089F_InitVariables_completed = true;

    libC7F2089F_gv_fightUnitsPercent = 0.25;
    libC7F2089F_gv_fightTimer = TimerCreate();
}

// Functions
void libC7F2089F_gf_SetupOptions (int lp_handicapindex) {
    // Variable Declarations
    int lv_optionindex;
    int lv_optionvalueindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name = StringExternal("Param/Value/lib_C7F2089F_6E81357E");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description = StringExternal("Param/Value/lib_C7F2089F_C7F0D332");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath = "Assets\\Textures\\ui_tipicon_story-evolution.dds";
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_C7F2089F_BA4C66B8");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "10";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_selectedVal = "30";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "20";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "30";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "40";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "50";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "60";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_C7F2089F_6D9F58A5");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "10";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_selectedVal = "25";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "25";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "50";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "75";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "100";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofGameOptions = lv_optionindex;
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_C7F2089F_E705C1B1");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libC7F2089F_gv_allUnits;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libC7F2089F_gv_allUnitsButNotWorkers;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libC7F2089F_gv_onlyWorkers;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions = lv_optionindex;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_setupTrigger = libC7F2089F_gt_SetupHandicap;
}

void libC7F2089F_gf_EnableHandicap (int lp_handicapIndex) {
    // Variable Declarations
    playergroup lv_players;
    text lv_playersSettings;

    // Automatic Variable Declarations
    string auto1FACD848_val;
    string autoAF9F2877_val;
    playergroup auto2BC409DE_g;
    int auto2BC409DE_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_enabled == true)) {
        auto1FACD848_val = libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_gameOptions[0].lv_selectedVal;
        if (auto1FACD848_val == "10") {
            libC7F2089F_gv_fightFreequency = 10;
        }
        else if (auto1FACD848_val == "20") {
            libC7F2089F_gv_fightFreequency = 20;
        }
        else if (auto1FACD848_val == "30") {
            libC7F2089F_gv_fightFreequency = 30;
        }
        else if (auto1FACD848_val == "40") {
            libC7F2089F_gv_fightFreequency = 40;
        }
        else if (auto1FACD848_val == "50") {
            libC7F2089F_gv_fightFreequency = 50;
        }
        else if (auto1FACD848_val == "60") {
            libC7F2089F_gv_fightFreequency = 60;
        }
        else {
            libC7F2089F_gv_fightFreequency = 30;
        }
        autoAF9F2877_val = libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_gameOptions[1].lv_selectedVal;
        if (autoAF9F2877_val == "10") {
            libC7F2089F_gv_fightUnitsPercent = 0.1;
        }
        else if (autoAF9F2877_val == "25") {
            libC7F2089F_gv_fightUnitsPercent = 0.25;
        }
        else if (autoAF9F2877_val == "50") {
            libC7F2089F_gv_fightUnitsPercent = 0.5;
        }
        else if (autoAF9F2877_val == "75") {
            libC7F2089F_gv_fightUnitsPercent = 0.75;
        }
        else if (autoAF9F2877_val == "100") {
            libC7F2089F_gv_fightUnitsPercent = 1.0;
        }
        else {
            libC7F2089F_gv_fightUnitsPercent = 0.25;
        }
        auto2BC409DE_g = PlayerGroupActive();
        auto2BC409DE_var = -1;
        while (true) {
            auto2BC409DE_var = PlayerGroupNextPlayer(auto2BC409DE_g, auto2BC409DE_var);
            if (auto2BC409DE_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[auto2BC409DE_var] != libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL)) {
                PlayerGroupAdd(lv_players, auto2BC409DE_var);
                libDBC4E2D2_gv_pLAYERS[auto2BC409DE_var].lv_fIGHTCLUB.lv_enabled = true;
                libDBC4E2D2_gv_pLAYERS[auto2BC409DE_var].lv_fIGHTCLUB.lv_unitsScope = libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[auto2BC409DE_var];
                TextExpressionSetToken("Param/Expression/lib_C7F2089F_F1055F3F", "A", TextWithColor(PlayerName(auto2BC409DE_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(auto2BC409DE_var, false))));
                lv_playersSettings = (lv_playersSettings + TextExpressionAssemble("Param/Expression/lib_C7F2089F_F1055F3F"));
                lv_playersSettings = (lv_playersSettings + StringToText(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[auto2BC409DE_var]));
                lv_playersSettings = (lv_playersSettings + TextExpressionAssemble("Param/Expression/lib_C7F2089F_D7F5BE99"));
            }

        }
        if ((PlayerGroupCount(lv_players) > 0)) {
            TextExpressionSetToken("Param/Expression/lib_C7F2089F_648B5CD8", "FightDelay", IntToText(libC7F2089F_gv_fightFreequency));
            TextExpressionSetToken("Param/Expression/lib_C7F2089F_648B5CD8", "FightUnitsPercent", FixedToText((libC7F2089F_gv_fightUnitsPercent * 100.0), c_fixedPrecisionAny));
            TextExpressionSetToken("Param/Expression/lib_C7F2089F_648B5CD8", "Players", lv_playersSettings);
            HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_C7F2089F_648B5CD8"), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_iconPath);
            TimerStart(libC7F2089F_gv_fightTimer, libC7F2089F_gv_fightFreequency, true, c_timeReal);
        }

    }

}

trigger auto_libC7F2089F_gf_Fight_Trigger = null;
int auto_libC7F2089F_gf_Fight_lp_riotUnitsOwner;

void libC7F2089F_gf_Fight (int lp_riotUnitsOwner) {
    auto_libC7F2089F_gf_Fight_lp_riotUnitsOwner = lp_riotUnitsOwner;

    if (auto_libC7F2089F_gf_Fight_Trigger == null) {
        auto_libC7F2089F_gf_Fight_Trigger = TriggerCreate("auto_libC7F2089F_gf_Fight_TriggerFunc");
    }

    TriggerExecute(auto_libC7F2089F_gf_Fight_Trigger, false, false);
}

bool auto_libC7F2089F_gf_Fight_TriggerFunc (bool testConds, bool runActions) {
    int lp_riotUnitsOwner = auto_libC7F2089F_gf_Fight_lp_riotUnitsOwner;

    // Variable Declarations
    unit lv_selectedUnit1;
    unit lv_selectedUnit2;
    unitgroup lv_allUnits;

    // Automatic Variable Declarations
    int autoD48C6D53_ae;
    int autoD48C6D53_var;

    // Variable Initialization
    lv_allUnits = UnitGroupEmpty();

    // Implementation
    if ((libDBC4E2D2_gv_pLAYERS[lp_riotUnitsOwner].lv_fIGHTCLUB.lv_unitsScope == libC7F2089F_gv_onlyWorkers)) {
        UnitGroupAddUnitGroup(lv_allUnits, UnitGroup(null, lp_riotUnitsOwner, RegionEntireMap(), UnitFilter((1 << c_targetFilterWorker), 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0));
    }
    else {
        if ((libDBC4E2D2_gv_pLAYERS[lp_riotUnitsOwner].lv_fIGHTCLUB.lv_unitsScope == libC7F2089F_gv_allUnitsButNotWorkers)) {
            UnitGroupAddUnitGroup(lv_allUnits, UnitGroup(null, lp_riotUnitsOwner, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterWorker) | (1 << c_targetFilterMissile) | (1 << c_targetFilterUncommandable), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0));
        }
        else {
            if ((libDBC4E2D2_gv_pLAYERS[lp_riotUnitsOwner].lv_fIGHTCLUB.lv_unitsScope == libC7F2089F_gv_allUnits)) {
                UnitGroupAddUnitGroup(lv_allUnits, UnitGroup(null, lp_riotUnitsOwner, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile) | (1 << c_targetFilterUncommandable), (1 << (c_targetFilterUnderConstruction - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterHallucination - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0));
            }

        }
    }
    lv_allUnits = libDBC4E2D2_gf_FilterOutAmmoUnits(lv_allUnits, lp_riotUnitsOwner);
    autoD48C6D53_ae = RoundI(((UnitGroupCount(lv_allUnits, c_unitCountAlive) * libC7F2089F_gv_fightUnitsPercent) / 2.0));
    autoD48C6D53_var = 1;
    for ( ; autoD48C6D53_var <= autoD48C6D53_ae; autoD48C6D53_var += 1 ) {
        lv_selectedUnit1 = UnitGroupRandomUnit(lv_allUnits, c_unitCountAlive);
        UnitGroupRemove(lv_allUnits, lv_selectedUnit1);
        lv_selectedUnit2 = UnitGroupRandomUnit(lv_allUnits, c_unitCountAlive);
        UnitGroupRemove(lv_allUnits, lv_selectedUnit2);
        UnitIssueOrder(lv_selectedUnit1, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        UnitIssueOrder(lv_selectedUnit1, Order(AbilityCommand("TerranBuild", 30)), c_orderQueueAddToEnd);
        UnitIssueOrder(lv_selectedUnit1, OrderTargetingUnit(AbilityCommand("attack", 0), lv_selectedUnit2), c_orderQueueAddToEnd);
        UnitIssueOrder(lv_selectedUnit2, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        UnitIssueOrder(lv_selectedUnit2, Order(AbilityCommand("TerranBuild", 30)), c_orderQueueAddToEnd);
        UnitIssueOrder(lv_selectedUnit2, OrderTargetingUnit(AbilityCommand("attack", 0), lv_selectedUnit1), c_orderQueueAddToEnd);
        if ((UnitHasBehavior2(lv_selectedUnit1, "UnfairSC2FightClubMember") == false)) {
            UnitBehaviorAdd(lv_selectedUnit1, "UnfairSC2FightClubMember", lv_selectedUnit1, 1);
        }

        if ((UnitHasBehavior2(lv_selectedUnit2, "UnfairSC2FightClubMember") == false)) {
            UnitBehaviorAdd(lv_selectedUnit2, "UnfairSC2FightClubMember", lv_selectedUnit2, 1);
        }

    }
    return true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicap
//--------------------------------------------------------------------------------------------------
bool libC7F2089F_gt_SetupHandicap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libC7F2089F_gf_EnableHandicap(libD169EC7B_gv_activeHandicapIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libC7F2089F_gt_SetupHandicap_Init () {
    libC7F2089F_gt_SetupHandicap = TriggerCreate("libC7F2089F_gt_SetupHandicap_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Do Fight
//--------------------------------------------------------------------------------------------------
bool libC7F2089F_gt_DoFight_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoBA263723_g;
    int autoBA263723_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(libC7F2089F_gt_RemoveFightClubMemberBehavior, false);
    Wait(0.05, c_timeGame);
    autoBA263723_g = PlayerGroupAll();
    autoBA263723_var = -1;
    while (true) {
        autoBA263723_var = PlayerGroupNextPlayer(autoBA263723_g, autoBA263723_var);
        if (autoBA263723_var < 0) { break; }
        if ((libDBC4E2D2_gv_pLAYERS[autoBA263723_var].lv_fIGHTCLUB.lv_enabled == true)) {
            libC7F2089F_gf_Fight(autoBA263723_var);
        }

    }
    Wait(0.05, c_timeGame);
    TriggerEnable(libC7F2089F_gt_RemoveFightClubMemberBehavior, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libC7F2089F_gt_DoFight_Init () {
    libC7F2089F_gt_DoFight = TriggerCreate("libC7F2089F_gt_DoFight_Func");
    TriggerAddEventTimer(libC7F2089F_gt_DoFight, libC7F2089F_gv_fightTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Remove Fight Club Member Behavior
//--------------------------------------------------------------------------------------------------
bool libC7F2089F_gt_RemoveFightClubMemberBehavior_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDBC4E2D2_gv_pLAYERS[UnitGetOwner(EventUnit())].lv_fIGHTCLUB.lv_enabled == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(EventUnit(), "UnfairSC2FightClubMember", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libC7F2089F_gt_RemoveFightClubMemberBehavior_Init () {
    libC7F2089F_gt_RemoveFightClubMemberBehavior = TriggerCreate("libC7F2089F_gt_RemoveFightClubMemberBehavior_Func");
    TriggerAddEventUnitOrder(libC7F2089F_gt_RemoveFightClubMemberBehavior, null, null);
}

void libC7F2089F_InitTriggers () {
    libC7F2089F_gt_SetupHandicap_Init();
    libC7F2089F_gt_DoFight_Init();
    libC7F2089F_gt_RemoveFightClubMemberBehavior_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libC7F2089F_InitLib_completed = false;

void libC7F2089F_InitLib () {
    if (libC7F2089F_InitLib_completed) {
        return;
    }

    libC7F2089F_InitLib_completed = true;

    libC7F2089F_InitLibraries();
    libC7F2089F_InitVariables();
    libC7F2089F_InitTriggers();
}

include "LibD169EC7B"
include "LibDBC4E2D2"

