include "TriggerLibs/NativeLib"
include "LibD169EC7B_h"
include "LibDBC4E2D2_h"

include "LibFCC56787_h"

//--------------------------------------------------------------------------------------------------
// Library: CAMERA
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libFCC56787_InitLibraries () {
    libNtve_InitVariables();
    libD169EC7B_InitVariables();
    libDBC4E2D2_InitVariables();
}

// Variable Initialization
bool libFCC56787_InitVariables_completed = false;

void libFCC56787_InitVariables () {
    if (libFCC56787_InitVariables_completed) {
        return;
    }

    libFCC56787_InitVariables_completed = true;

    libFCC56787_gv_cameraTimer = TimerCreate();
}

// Functions
void libFCC56787_gf_SetupOptions (int lp_handicapindex) {
    // Variable Declarations
    int lv_optionindex;
    int lv_optionvalueindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name = StringExternal("Param/Value/lib_FCC56787_E51BB55C");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description = StringExternal("Param/Value/lib_FCC56787_76CA7B9D");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath = "Assets\\Textures\\vertigo_coop.dds";
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_FCC56787_A4B9FE91");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "Rotate";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions = lv_optionindex;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_setupTrigger = libFCC56787_gt_SetupHandicap;
}

void libFCC56787_gf_EnableHandicap (int lp_handicapIndex) {
    // Variable Declarations
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup auto65E8725F_g;
    int auto65E8725F_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_enabled == true)) {
        auto65E8725F_g = PlayerGroupActive();
        auto65E8725F_var = -1;
        while (true) {
            auto65E8725F_var = PlayerGroupNextPlayer(auto65E8725F_g, auto65E8725F_var);
            if (auto65E8725F_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[auto65E8725F_var] != libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL)) {
                PlayerGroupAdd(lv_players, auto65E8725F_var);
                libFCC56787_gf_EnableHandicapForPlayer(auto65E8725F_var);
            }

        }
        if ((PlayerGroupCount(lv_players) > 0)) {
            TextExpressionSetToken("Param/Expression/lib_FCC56787_DADC80D0", "Description", libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_description);
            TextExpressionSetToken("Param/Expression/lib_FCC56787_DADC80D0", "Players", libDBC4E2D2_gf_GetPlayerNamesColored(lv_players));
            HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_FCC56787_DADC80D0"), libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libD169EC7B_gv_hANDICAPS[libD169EC7B_gv_activeHandicapIndex].lv_iconPath);
            TimerStart(libFCC56787_gv_cameraTimer, 20.0, true, c_timeReal);
        }
        else {
            TriggerEnable(libFCC56787_gt_RotateCamera, false);
        }
    }
    else {
        TriggerEnable(libFCC56787_gt_RotateCamera, false);
    }
}

void libFCC56787_gf_EnableHandicapForPlayer (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libDBC4E2D2_gv_pLAYERS[lp_player].lv_cAMERA.lv_enabled = true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicap
//--------------------------------------------------------------------------------------------------
bool libFCC56787_gt_SetupHandicap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libFCC56787_gf_EnableHandicap(libD169EC7B_gv_activeHandicapIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libFCC56787_gt_SetupHandicap_Init () {
    libFCC56787_gt_SetupHandicap = TriggerCreate("libFCC56787_gt_SetupHandicap_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Rotate Camera
//--------------------------------------------------------------------------------------------------
bool libFCC56787_gt_RotateCamera_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_angle;

    // Automatic Variable Declarations
    playergroup auto447595FB_g;
    int auto447595FB_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    while (true) {
        auto447595FB_g = PlayerGroupAll();
        auto447595FB_var = -1;
        while (true) {
            auto447595FB_var = PlayerGroupNextPlayer(auto447595FB_g, auto447595FB_var);
            if (auto447595FB_var < 0) { break; }
            if ((libDBC4E2D2_gv_pLAYERS[auto447595FB_var].lv_cAMERA.lv_enabled == true)) {
                SoundPlayForPlayer(SoundLink("UI_PlayerCameraSelect", -1), c_maxPlayers, PlayerGroupSingle(auto447595FB_var), 100.0, 0.0);
                lv_angle = (RandomInt(0, 3) * 90.0);
                if ((lv_angle == 360.0)) {
                    lv_angle = 0.0;
                }

                lv_angle = (lv_angle + 90.0);
                CameraSetValue(auto447595FB_var, c_cameraValueYaw, lv_angle, 0.0, -1, 0.0);
            }

        }
        Wait(20.0, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libFCC56787_gt_RotateCamera_Init () {
    libFCC56787_gt_RotateCamera = TriggerCreate("libFCC56787_gt_RotateCamera_Func");
    TriggerAddEventTimer(libFCC56787_gt_RotateCamera, libFCC56787_gv_cameraTimer);
}

void libFCC56787_InitTriggers () {
    libFCC56787_gt_SetupHandicap_Init();
    libFCC56787_gt_RotateCamera_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libFCC56787_InitLib_completed = false;

void libFCC56787_InitLib () {
    if (libFCC56787_InitLib_completed) {
        return;
    }

    libFCC56787_InitLib_completed = true;

    libFCC56787_InitLibraries();
    libFCC56787_InitVariables();
    libFCC56787_InitTriggers();
}

include "LibD169EC7B"
include "LibDBC4E2D2"

