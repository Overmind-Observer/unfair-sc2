include "TriggerLibs/NativeLib"
include "LibD169EC7B_h"
include "LibDBC4E2D2_h"

include "Lib7BF03AFB_h"

//--------------------------------------------------------------------------------------------------
// Library: LAST WILL
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib7BF03AFB_InitLibraries () {
    libNtve_InitVariables();
    libD169EC7B_InitVariables();
    libDBC4E2D2_InitVariables();
}

// Variable Initialization
bool lib7BF03AFB_InitVariables_completed = false;

void lib7BF03AFB_InitVariables () {
    if (lib7BF03AFB_InitVariables_completed) {
        return;
    }

    lib7BF03AFB_InitVariables_completed = true;

}

// Functions
void lib7BF03AFB_gf_SetupOptions (int lp_handicapindex) {
    // Variable Declarations
    int lv_optionindex;
    int lv_optionvalueindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name = StringExternal("Param/Value/lib_7BF03AFB_3DEE39DC");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description = StringExternal("Param/Value/lib_7BF03AFB_FDFDF356");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath = "Assets\\Textures\\btn-ability-protoss-recallondeath.dds";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_forTournaments = true;
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_7BF03AFB_112FB72D");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVALGAME;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_selectedVal = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVALGAME;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "5";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "10";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "15";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "20";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "25";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "50";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "75";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "100";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_gameOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofGameOptions = lv_optionindex;
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_7BF03AFB_516A7050");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "50";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "100";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "200";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions = lv_optionindex;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_setupTrigger = lib7BF03AFB_gt_SetupHandicap;
}

void lib7BF03AFB_gf_EnableHandicap (int lp_handicapIndex) {
    // Variable Declarations
    playergroup lv_players;
    text lv_msgAboutExtraCasts;
    text lv_playersSettings;

    // Automatic Variable Declarations
    string auto055388A5_val;
    playergroup autoBBE0F0E5_g;
    int autoBBE0F0E5_var;
    string auto6877A7A6_val;
    playergroup autoE10DB0D1_g;
    int autoE10DB0D1_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_enabled == true)) {
        auto055388A5_val = libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_gameOptions[0].lv_selectedVal;
        if (auto055388A5_val == "5") {
            lib7BF03AFB_gv_lastWillCasteChance = 5.0;
        }
        else if (auto055388A5_val == "10") {
            lib7BF03AFB_gv_lastWillCasteChance = 10.0;
        }
        else if (auto055388A5_val == "15") {
            lib7BF03AFB_gv_lastWillCasteChance = 15.0;
        }
        else if (auto055388A5_val == "20") {
            lib7BF03AFB_gv_lastWillCasteChance = 20.0;
        }
        else if (auto055388A5_val == "25") {
            lib7BF03AFB_gv_lastWillCasteChance = 25.0;
        }
        else if (auto055388A5_val == "50") {
            lib7BF03AFB_gv_lastWillCasteChance = 50.0;
        }
        else if (auto055388A5_val == "75") {
            lib7BF03AFB_gv_lastWillCasteChance = 75.0;
        }
        else if (auto055388A5_val == "100") {
            lib7BF03AFB_gv_lastWillCasteChance = 100.0;
        }
        else {
            lib7BF03AFB_gv_lastWillCasteChance = 0.0;
        }
        if ((lib7BF03AFB_gv_lastWillCasteChance != 0.0)) {
            lib7BF03AFB_gv_useLastWillCaste = true;
        }

        autoBBE0F0E5_g = PlayerGroupActive();
        autoBBE0F0E5_var = -1;
        while (true) {
            autoBBE0F0E5_var = PlayerGroupNextPlayer(autoBBE0F0E5_g, autoBBE0F0E5_var);
            if (autoBBE0F0E5_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[autoBBE0F0E5_var] != libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL)) {
                auto6877A7A6_val = libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[autoBBE0F0E5_var];
                if (auto6877A7A6_val == "50") {
                    libDBC4E2D2_gv_pLAYERS[autoBBE0F0E5_var].lv_lASTWILL.lv_rate = 0.5;
                }
                else if (auto6877A7A6_val == "100") {
                    libDBC4E2D2_gv_pLAYERS[autoBBE0F0E5_var].lv_lASTWILL.lv_rate = 1.0;
                }
                else if (auto6877A7A6_val == "200") {
                    libDBC4E2D2_gv_pLAYERS[autoBBE0F0E5_var].lv_lASTWILL.lv_rate = 2.0;
                }
                else {
                    libDBC4E2D2_gv_pLAYERS[autoBBE0F0E5_var].lv_lASTWILL.lv_rate = 0.0;
                }
                if ((libDBC4E2D2_gv_pLAYERS[autoBBE0F0E5_var].lv_lASTWILL.lv_rate != 0)) {
                    PlayerGroupAdd(lv_players, autoBBE0F0E5_var);
                }

            }

        }
        if ((PlayerGroupCount(lv_players) > 0)) {
            if ((lib7BF03AFB_gv_useLastWillCaste == true)) {
                TextExpressionSetToken("Param/Expression/lib_7BF03AFB_440FEDE7", "Chance", FixedToText(lib7BF03AFB_gv_lastWillCasteChance, 0));
                lv_msgAboutExtraCasts = TextExpressionAssemble("Param/Expression/lib_7BF03AFB_440FEDE7");
            }

            autoE10DB0D1_g = lv_players;
            autoE10DB0D1_var = -1;
            while (true) {
                autoE10DB0D1_var = PlayerGroupNextPlayer(autoE10DB0D1_g, autoE10DB0D1_var);
                if (autoE10DB0D1_var < 0) { break; }
                TextExpressionSetToken("Param/Expression/lib_7BF03AFB_EF94A59A", "A", TextWithColor(PlayerName(autoE10DB0D1_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(autoE10DB0D1_var, false))));
                lv_playersSettings = (lv_playersSettings + TextExpressionAssemble("Param/Expression/lib_7BF03AFB_EF94A59A"));
                TextExpressionSetToken("Param/Expression/lib_7BF03AFB_BB24BF77", "A", FixedToText((libDBC4E2D2_gv_pLAYERS[autoE10DB0D1_var].lv_lASTWILL.lv_rate * 100.0), 0));
                lv_playersSettings = (lv_playersSettings + TextExpressionAssemble("Param/Expression/lib_7BF03AFB_BB24BF77"));
            }
            TextExpressionSetToken("Param/Expression/lib_7BF03AFB_F96E6253", "Chance", lv_msgAboutExtraCasts);
            TextExpressionSetToken("Param/Expression/lib_7BF03AFB_F96E6253", "Settings", lv_playersSettings);
            HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_7BF03AFB_F96E6253"), libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_iconPath);
        }
        else {
            TriggerEnable(lib7BF03AFB_gt_UnitTakesFatalDamage, false);
        }
    }
    else {
        TriggerEnable(lib7BF03AFB_gt_UnitTakesFatalDamage, false);
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicap
//--------------------------------------------------------------------------------------------------
bool lib7BF03AFB_gt_SetupHandicap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib7BF03AFB_gf_EnableHandicap(libD169EC7B_gv_activeHandicapIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib7BF03AFB_gt_SetupHandicap_Init () {
    lib7BF03AFB_gt_SetupHandicap = TriggerCreate("lib7BF03AFB_gt_SetupHandicap_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Unit Takes Fatal Damage
//--------------------------------------------------------------------------------------------------
bool lib7BF03AFB_gt_UnitTakesFatalDamage_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_unit;

    // Automatic Variable Declarations
    int autoCEA0405C_val;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((libDBC4E2D2_gv_pLAYERS[EventPlayer()].lv_lASTWILL.lv_rate != 0.0))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnit()), c_unitAttributeStructure) == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnitDamageSourceUnit()) != ""))) {
            return false;
        }

        if (!((UnitGetType(EventUnitDamageSourceUnit()) != "LocustMP"))) {
            return false;
        }

        if (!((UnitGetType(EventUnitDamageSourceUnit()) != "Broodling"))) {
            return false;
        }

        if (!((UnitGetType(EventUnitDamageSourceUnit()) != "InfestorTerran"))) {
            return false;
        }

        if (!((UnitGetType(EventUnitDamageSourceUnit()) != "InfestorTerranBurrowed"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnitDamageSourceUnit()) != 15))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnitDamageSourceUnit()) != UnitGetOwner(EventUnit())))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_AttachModelToUnit(EventUnitDamageSourceUnit(), "BanelingCocoonDeath", "Ref_Overhead");
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    UnitDamage(EventUnit(), "Spines", EventUnitDamageSourceUnit(), (UnitTypeGetProperty(UnitGetType(EventUnit()), c_unitPropLifeMax) * libDBC4E2D2_gv_pLAYERS[EventPlayer()].lv_lASTWILL.lv_rate));
    if ((libNtve_gf_RandomPercent() <= lib7BF03AFB_gv_lastWillCasteChance)) {
        autoCEA0405C_val = RandomInt(0, 15);
        if (autoCEA0405C_val == 0) {
            UnitCreateEffectPoint(EventUnit(), "PsiStormPersistent", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 1) {
            PlayerCreateEffectPoint(EventPlayer(), "InfestedTerransLayEggPersistant", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 2) {
            PlayerCreateEffectPoint(EventPlayer(), "VortexCreatePersistent", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 3) {
            PlayerCreateEffectPoint(EventPlayer(), "BlindingCloudCP", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 4) {
            UnitCreateEffectPoint(EventUnit(), "CorsairMPDisruptionWebCreatePersistent", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 5) {
            UnitCreateEffectPoint(EventUnit(), "PointDefenseDroneReleaseCreateUnit", libNtve_gf_PointOffsetTowardsPoint(UnitGetPosition(EventUnit()), 1.5, UnitGetPosition(EventUnitDamageSourceUnit())));
        }
        else if (autoCEA0405C_val == 6) {
            UnitCreateEffectUnit(EventUnit(), "DefensiveMatrixSet", EventUnitDamageSourceUnit());
        }
        else if (autoCEA0405C_val == 7) {
            UnitCreateEffectPoint(EventUnit(), "TemporalFieldCreatePersistent", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 8) {
            UnitCreateEffectPoint(EventUnit(), "VoidHighTemplarPsiOrbInitialPersistent", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 9) {
            UnitCreateEffectUnit(EventUnit(), "GravitonBeamUrun", EventUnitDamageSourceUnit());
        }
        else if (autoCEA0405C_val == 10) {
            UnitCreateEffectUnit(EventUnit(), "Yamato", EventUnitDamageSourceUnit());
        }
        else if (autoCEA0405C_val == 11) {
            UnitCreateEffectUnit(EventUnit(), "YoinkStartSwitch", EventUnitDamageSourceUnit());
        }
        else if (autoCEA0405C_val == 12) {
            UnitCreateEffectUnit(EventUnit(), "IrradiateSet", EventUnitDamageSourceUnit());
        }
        else if (autoCEA0405C_val == 13) {
            UnitCreateEffectPoint(EventUnit(), "FungalGrowthLaunchMissile", UnitGetPosition(EventUnitDamageSourceUnit()));
        }
        else if (autoCEA0405C_val == 14) {
            UnitCreateEffectUnit(EventUnit(), "SeekerMissileLaunchMissile", EventUnitDamageSourceUnit());
        }
        else {
        }
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib7BF03AFB_gt_UnitTakesFatalDamage_Init () {
    lib7BF03AFB_gt_UnitTakesFatalDamage = TriggerCreate("lib7BF03AFB_gt_UnitTakesFatalDamage_Func");
    TriggerAddEventUnitDamaged(lib7BF03AFB_gt_UnitTakesFatalDamage, null, c_unitDamageTypeAny, c_unitDamageFatal, null);
}

void lib7BF03AFB_InitTriggers () {
    lib7BF03AFB_gt_SetupHandicap_Init();
    lib7BF03AFB_gt_UnitTakesFatalDamage_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib7BF03AFB_InitLib_completed = false;

void lib7BF03AFB_InitLib () {
    if (lib7BF03AFB_InitLib_completed) {
        return;
    }

    lib7BF03AFB_InitLib_completed = true;

    lib7BF03AFB_InitLibraries();
    lib7BF03AFB_InitVariables();
    lib7BF03AFB_InitTriggers();
}

include "LibD169EC7B"
include "LibDBC4E2D2"

