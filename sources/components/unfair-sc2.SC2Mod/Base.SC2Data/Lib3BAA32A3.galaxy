include "TriggerLibs/NativeLib"
include "LibD169EC7B_h"
include "LibDBC4E2D2_h"

include "Lib3BAA32A3_h"

//--------------------------------------------------------------------------------------------------
// Library: DOUBLE
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib3BAA32A3_InitLibraries () {
    libNtve_InitVariables();
    libD169EC7B_InitVariables();
    libDBC4E2D2_InitVariables();
}

// Variable Initialization
bool lib3BAA32A3_InitVariables_completed = false;

void lib3BAA32A3_InitVariables () {
    if (lib3BAA32A3_InitVariables_completed) {
        return;
    }

    lib3BAA32A3_InitVariables_completed = true;

    lib3BAA32A3_gv_doubleLeaderboard = c_boardNone;
}

// Functions
void lib3BAA32A3_gf_SetupOptions (int lp_handicapindex) {
    // Variable Declarations
    int lv_optionindex;
    int lv_optionvalueindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name = StringExternal("Param/Value/lib_3BAA32A3_BC6F72B8");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description = StringExternal("Param/Value/lib_3BAA32A3_894F5494");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath = "Assets\\Textures\\btn-ability-protoss-doubleshieldrecharge.dds";
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_forTournaments = true;
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_3BAA32A3_A2E88C59");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "Enable";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions = lv_optionindex;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_setupTrigger = lib3BAA32A3_gt_SetupHandicap;
}

void lib3BAA32A3_gf_EnableHandicap (int lp_handicapIndex) {
    // Variable Declarations
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup autoD2D6FC4D_g;
    int autoD2D6FC4D_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_enabled == true)) {
        autoD2D6FC4D_g = PlayerGroupActive();
        autoD2D6FC4D_var = -1;
        while (true) {
            autoD2D6FC4D_var = PlayerGroupNextPlayer(autoD2D6FC4D_g, autoD2D6FC4D_var);
            if (autoD2D6FC4D_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[autoD2D6FC4D_var] != libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL)) {
                PlayerGroupAdd(lv_players, autoD2D6FC4D_var);
                lib3BAA32A3_gf_EnableHandicapForPlayer(autoD2D6FC4D_var);
                libDBC4E2D2_gv_pLAYERS[autoD2D6FC4D_var].lv_dOUBLE.lv_messageindex = libDBC4E2D2_gv_pLAYERS[autoD2D6FC4D_var].lv_uI.lv_numberofmessages;
                libDBC4E2D2_gv_pLAYERS[autoD2D6FC4D_var].lv_uI.lv_numberofmessages += 1;
            }

        }
        if ((PlayerGroupCount(lv_players) > 0)) {
            lib3BAA32A3_gv_doubleLeaderboard = libDBC4E2D2_gf_CreateResourcesLeaderboard(StringExternal("Param/Value/lib_3BAA32A3_D07FC8B6"));
            libNtve_gf_ShowHideLeaderboard(lib3BAA32A3_gv_doubleLeaderboard, true, libDBC4E2D2_gv_observerGroup);
            TextExpressionSetToken("Param/Expression/lib_3BAA32A3_C64055A7", "Description", libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_description);
            TextExpressionSetToken("Param/Expression/lib_3BAA32A3_C64055A7", "Players", libDBC4E2D2_gf_GetPlayerNamesColored(lv_players));
            HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_3BAA32A3_C64055A7"), libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_iconPath);
        }
        else {
            TriggerEnable(lib3BAA32A3_gt_DuplicateCreatedUnit, false);
            TriggerEnable(lib3BAA32A3_gt_UpdateDoubleLeaderboard, false);
            TriggerEnable(lib3BAA32A3_gt_ShowSavedResources, false);
        }
    }
    else {
        TriggerEnable(lib3BAA32A3_gt_DuplicateCreatedUnit, false);
        TriggerEnable(lib3BAA32A3_gt_UpdateDoubleLeaderboard, false);
        TriggerEnable(lib3BAA32A3_gt_ShowSavedResources, false);
    }
}

void lib3BAA32A3_gf_EnableHandicapForPlayer (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libDBC4E2D2_gv_pLAYERS[lp_player].lv_dOUBLE.lv_enabled = true;
    PlayerModifyPropertyInt(lp_player, c_playerPropSuppliesMade, c_playerPropOperSetTo, 200);
}

void lib3BAA32A3_gf_CreateCloneofUnit (unit lp_unitToClone) {
    // Automatic Variable Declarations
    // Implementation
    UnitCreate(1, UnitGetType(lp_unitToClone), 0, UnitGetOwner(lp_unitToClone), UnitGetPosition(lp_unitToClone), 270.0);
    UnitIssueOrder(UnitLastCreated(), UnitOrder(lp_unitToClone, 0), c_orderQueueReplace);
    libNtve_gf_AttachModelToUnitInheritVisibility(UnitLastCreated(), "UnfairSC2DoubleBirth", "Ref_Head");
    libDBC4E2D2_gv_pLAYERS[UnitGetOwner(lp_unitToClone)].lv_dOUBLE.lv_minerals += UnitTypeGetCost(UnitGetType(lp_unitToClone), c_unitCostMinerals);
    libDBC4E2D2_gv_pLAYERS[UnitGetOwner(lp_unitToClone)].lv_dOUBLE.lv_gas += UnitTypeGetCost(UnitGetType(lp_unitToClone), c_unitCostVespene);
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicap
//--------------------------------------------------------------------------------------------------
bool lib3BAA32A3_gt_SetupHandicap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib3BAA32A3_gf_EnableHandicap(libD169EC7B_gv_activeHandicapIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib3BAA32A3_gt_SetupHandicap_Init () {
    lib3BAA32A3_gt_SetupHandicap = TriggerCreate("lib3BAA32A3_gt_SetupHandicap_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Duplicate Created Unit
//--------------------------------------------------------------------------------------------------
bool lib3BAA32A3_gt_DuplicateCreatedUnit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDBC4E2D2_gv_pLAYERS[UnitGetOwner(EventUnitCreatedUnit())].lv_dOUBLE.lv_enabled == true))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnitCreatedUnit()), c_unitAttributeStructure) == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) != "AdeptPhaseShift"))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) != "Archon"))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) != "Baneling"))) {
            return false;
        }

        if (!((UnitGetType(EventUnitCreatedUnit()) != "DisruptorPhased"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationArchon"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationColossus"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationHighTemplar"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationImmortal"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationPhoenix"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationProbe"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationStalker"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationVoidRay"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationWarpPrism"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationZealot"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationAdept"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "HallucinationDisruptor"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "Hyperjump"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "Yoink"))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != ""))) {
            return false;
        }

        if (!((EventUnitCreatedAbil() != "WarpGateTrain"))) {
            return false;
        }

        if (!(((UnitTypeGetProperty(UnitGetType(EventUnitCreatedUnit()), c_unitPropSuppliesUsed) > 0.0) || (UnitTypeGetProperty(UnitGetType(EventUnitCreatedUnit()), c_unitPropSuppliesMade) > 0.0)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib3BAA32A3_gf_CreateCloneofUnit(EventUnitCreatedUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib3BAA32A3_gt_DuplicateCreatedUnit_Init () {
    lib3BAA32A3_gt_DuplicateCreatedUnit = TriggerCreate("lib3BAA32A3_gt_DuplicateCreatedUnit_Func");
    TriggerAddEventUnitCreated(lib3BAA32A3_gt_DuplicateCreatedUnit, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Duplicate Warped Unit
//--------------------------------------------------------------------------------------------------
bool lib3BAA32A3_gt_DuplicateWarpedUnit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDBC4E2D2_gv_pLAYERS[EventPlayer()].lv_dOUBLE.lv_enabled == true))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(libNtve_gf_TriggeringProgressUnitType(), c_unitAttributeStructure) == false))) {
            return false;
        }

        if (!((libNtve_gf_TriggeringProgressUnitType() != "Archon"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib3BAA32A3_gf_CreateCloneofUnit(EventUnitProgressUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib3BAA32A3_gt_DuplicateWarpedUnit_Init () {
    lib3BAA32A3_gt_DuplicateWarpedUnit = TriggerCreate("lib3BAA32A3_gt_DuplicateWarpedUnit_Func");
    TriggerAddEventUnitConstructProgress(lib3BAA32A3_gt_DuplicateWarpedUnit, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Update Double Leaderboard
//--------------------------------------------------------------------------------------------------
bool lib3BAA32A3_gt_UpdateDoubleLeaderboard_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto7241B309_g;
    int auto7241B309_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7241B309_g = PlayerGroupAll();
    auto7241B309_var = -1;
    while (true) {
        auto7241B309_var = PlayerGroupNextPlayer(auto7241B309_g, auto7241B309_var);
        if (auto7241B309_var < 0) { break; }
        if ((PlayerStatus(auto7241B309_var) == c_playerStatusActive)) {
            BoardItemSetText(lib3BAA32A3_gv_doubleLeaderboard, 1, auto7241B309_var, TextWithColor(PlayerName(auto7241B309_var), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(auto7241B309_var, false))));
            BoardItemSetText(lib3BAA32A3_gv_doubleLeaderboard, 2, auto7241B309_var, FixedToText(libDBC4E2D2_gv_pLAYERS[auto7241B309_var].lv_dOUBLE.lv_minerals, c_fixedPrecisionAny));
            BoardItemSetText(lib3BAA32A3_gv_doubleLeaderboard, 3, auto7241B309_var, FixedToText(libDBC4E2D2_gv_pLAYERS[auto7241B309_var].lv_dOUBLE.lv_gas, c_fixedPrecisionAny));
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib3BAA32A3_gt_UpdateDoubleLeaderboard_Init () {
    lib3BAA32A3_gt_UpdateDoubleLeaderboard = TriggerCreate("lib3BAA32A3_gt_UpdateDoubleLeaderboard_Func");
    TriggerAddEventTimer(lib3BAA32A3_gt_UpdateDoubleLeaderboard, libDBC4E2D2_gv_timer1s);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Show "Saved" Resources
//--------------------------------------------------------------------------------------------------
bool lib3BAA32A3_gt_ShowSavedResources_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoC9498252_g;
    int autoC9498252_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoC9498252_g = PlayerGroupActive();
    autoC9498252_var = -1;
    while (true) {
        autoC9498252_var = PlayerGroupNextPlayer(autoC9498252_g, autoC9498252_var);
        if (autoC9498252_var < 0) { break; }
        if ((libDBC4E2D2_gv_pLAYERS[autoC9498252_var].lv_dOUBLE.lv_enabled == true)) {
            TextExpressionSetToken("Param/Expression/lib_3BAA32A3_2C951AA8", "minerals", FixedToText(libDBC4E2D2_gv_pLAYERS[autoC9498252_var].lv_dOUBLE.lv_minerals, c_fixedPrecisionAny));
            TextExpressionSetToken("Param/Expression/lib_3BAA32A3_2C951AA8", "gas", FixedToText(libDBC4E2D2_gv_pLAYERS[autoC9498252_var].lv_dOUBLE.lv_gas, c_fixedPrecisionAny));
            libDBC4E2D2_gv_pLAYERS[autoC9498252_var].lv_uI.lv_messages[libDBC4E2D2_gv_pLAYERS[autoC9498252_var].lv_dOUBLE.lv_messageindex] = TextExpressionAssemble("Param/Expression/lib_3BAA32A3_2C951AA8");
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib3BAA32A3_gt_ShowSavedResources_Init () {
    lib3BAA32A3_gt_ShowSavedResources = TriggerCreate("lib3BAA32A3_gt_ShowSavedResources_Func");
    TriggerAddEventTimer(lib3BAA32A3_gt_ShowSavedResources, libDBC4E2D2_gv_timer1s);
}

void lib3BAA32A3_InitTriggers () {
    lib3BAA32A3_gt_SetupHandicap_Init();
    lib3BAA32A3_gt_DuplicateCreatedUnit_Init();
    lib3BAA32A3_gt_DuplicateWarpedUnit_Init();
    lib3BAA32A3_gt_UpdateDoubleLeaderboard_Init();
    lib3BAA32A3_gt_ShowSavedResources_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib3BAA32A3_InitLib_completed = false;

void lib3BAA32A3_InitLib () {
    if (lib3BAA32A3_InitLib_completed) {
        return;
    }

    lib3BAA32A3_InitLib_completed = true;

    lib3BAA32A3_InitLibraries();
    lib3BAA32A3_InitVariables();
    lib3BAA32A3_InitTriggers();
}

include "LibD169EC7B"
include "LibDBC4E2D2"

