include "TriggerLibs/NativeLib"
include "LibD169EC7B_h"
include "LibDBC4E2D2_h"

include "Lib16A22498_h"

//--------------------------------------------------------------------------------------------------
// Library: EXTRA CREEP
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib16A22498_InitLibraries () {
    libNtve_InitVariables();
    libD169EC7B_InitVariables();
    libDBC4E2D2_InitVariables();
}

// Functions
void lib16A22498_gf_SetupOptions (int lp_handicapindex) {
    // Variable Declarations
    int lv_optionindex;
    int lv_optionvalueindex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_name = StringExternal("Param/Value/lib_16A22498_D358ECFE");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_description = StringExternal("Param/Value/lib_16A22498_93B05240");
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_iconPath = "Assets\\Textures\\btn-building-zerg-creeptumor.dds";
    lv_optionindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_name = StringExternal("Param/Value/lib_16A22498_A56ACF82");
    lv_optionvalueindex = 0;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL;
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_values[lv_optionvalueindex].lv_val = "Enabled";
    lv_optionvalueindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_playerOptions[lv_optionindex].lv_numberofValues = lv_optionvalueindex;
    lv_optionindex += 1;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_numberofPlayerOptions = lv_optionindex;
    libD169EC7B_gv_hANDICAPS[lp_handicapindex].lv_setupTrigger = lib16A22498_gt_SetupHandicap;
}

void lib16A22498_gf_EnableHandicap (int lp_handicapIndex) {
    // Variable Declarations
    playergroup lv_players;

    // Automatic Variable Declarations
    playergroup auto0798F0F4_g;
    int auto0798F0F4_var;

    // Variable Initialization
    lv_players = PlayerGroupEmpty();

    // Implementation
    if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_enabled == true)) {
        auto0798F0F4_g = PlayerGroupActive();
        auto0798F0F4_var = -1;
        while (true) {
            auto0798F0F4_var = PlayerGroupNextPlayer(auto0798F0F4_g, auto0798F0F4_var);
            if (auto0798F0F4_var < 0) { break; }
            if ((libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_playerOptions[0].lv_selectedVals[auto0798F0F4_var] != libD169EC7B_gv_hANDICAPOPTIONDISABLEDVAL)) {
                PlayerGroupAdd(lv_players, auto0798F0F4_var);
                lib16A22498_gf_EnableHandicapForPlayer(auto0798F0F4_var);
            }

        }
        if ((PlayerGroupCount(lv_players) > 0)) {
            TextExpressionSetToken("Param/Expression/lib_16A22498_CAC3AA52", "Description", libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_description);
            TextExpressionSetToken("Param/Expression/lib_16A22498_CAC3AA52", "Players", libDBC4E2D2_gf_GetPlayerNamesColored(lv_players));
            HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_16A22498_CAC3AA52"), libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_name, libD169EC7B_gv_hANDICAPS[lp_handicapIndex].lv_iconPath);
        }
        else {
            TriggerEnable(lib16A22498_gt_ZergStructureIsBuilt, false);
        }
    }
    else {
        TriggerEnable(lib16A22498_gt_ZergStructureIsBuilt, false);
    }
}

void lib16A22498_gf_EnableHandicapForPlayer (int lp_player) {
    // Automatic Variable Declarations
    // Implementation
    libDBC4E2D2_gv_pLAYERS[lp_player].lv_eXTRACREEP.lv_enabled = true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Setup Handicap
//--------------------------------------------------------------------------------------------------
bool lib16A22498_gt_SetupHandicap_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib16A22498_gf_EnableHandicap(libD169EC7B_gv_activeHandicapIndex);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib16A22498_gt_SetupHandicap_Init () {
    lib16A22498_gt_SetupHandicap = TriggerCreate("lib16A22498_gt_SetupHandicap_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Zerg Structure Is Built
//--------------------------------------------------------------------------------------------------
bool lib16A22498_gt_ZergStructureIsBuilt_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libDBC4E2D2_gv_pLAYERS[EventPlayer()].lv_eXTRACREEP.lv_enabled == true))) {
            return false;
        }

        if (!((PlayerRace(EventPlayer()) == "Zerg"))) {
            return false;
        }

        if (!((UnitTypeTestAttribute(UnitGetType(EventUnitProgressUnit()), c_unitAttributeStructure) == true))) {
            return false;
        }

        if (!((libNtve_gf_TriggeringProgressUnitType() != "SpineCrawler"))) {
            return false;
        }

        if (!((libNtve_gf_TriggeringProgressUnitType() != "SpineCrawlerUprooted"))) {
            return false;
        }

        if (!((libNtve_gf_TriggeringProgressUnitType() != "SporeCrawler"))) {
            return false;
        }

        if (!((libNtve_gf_TriggeringProgressUnitType() != "SporeCrawlerUprooted"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorAdd(EventUnitProgressUnit(), "makeCreep8x6", EventUnitProgressUnit(), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib16A22498_gt_ZergStructureIsBuilt_Init () {
    lib16A22498_gt_ZergStructureIsBuilt = TriggerCreate("lib16A22498_gt_ZergStructureIsBuilt_Func");
    TriggerAddEventUnitConstructProgress(lib16A22498_gt_ZergStructureIsBuilt, null, c_unitProgressStageComplete);
}

void lib16A22498_InitTriggers () {
    lib16A22498_gt_SetupHandicap_Init();
    lib16A22498_gt_ZergStructureIsBuilt_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib16A22498_InitLib_completed = false;

void lib16A22498_InitLib () {
    if (lib16A22498_InitLib_completed) {
        return;
    }

    lib16A22498_InitLib_completed = true;

    lib16A22498_InitLibraries();
    lib16A22498_InitTriggers();
}

include "LibD169EC7B"
include "LibDBC4E2D2"

